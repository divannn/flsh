/*The EnemyShip class controls enemy ships!*/package{	import flash.display.*	import flash.events.*	import flash.ui.*	import flash.utils.Timer;    import flash.events.TimerEvent;	import flash.filters.*	public class EnemyShip extends MovieClip	{		//the list is an array that stores all enemy ships on the stage		static public var list:Array = [];				//each enemy ship will have an x and y velocity		public var xv:Number;		public var yv:Number;				//each enemy ship will fire bullets at an interval		public var shootTimer:Timer;				//each enemy has a starting health and current health		public var health:int;		public var maxHealth:int;				//this method will iterate through all enemy ships in the list and kill them all		static public function killAll()		{			while(EnemyShip.list.length > 0)			{				EnemyShip.list[0].kill();							}			}				//this method will iterate through the list of enemy ships and damge them all (when a nuke power-up is used)		static public function damageAll()		{			//a nuke sound effect is added			var s = new SoundNuke();			s.play();			//the enemy ship list is iterated through			for(var i:int = EnemyShip.list.length-1; i>=0; i--)			{				//have this enemy ship in the list take damage				EnemyShip.list[i].takeDamage(9);			}			}		//when an enemy ship instance is created		public function EnemyShip()		{			//add it to the list of enemy ships			list.push(this);						//make a sound			var s = new SoundAlien();			s.play();						//set it's health (make it low, so it can be killed easily)			maxHealth = 1;			health = maxHealth;						//set it's x position to the right of the stage			x = Game.WIDTH + 50;			//give it a random y position			y = Math.floor(Math.random()*(Game.HEIGHT-50)+25);			//give it a random x velocity			xv = Math.floor(Math.random()*3+4);						//only some enemies should wobble			var wobbleRate:Number;			if(Game.main.difficultyMode == Game.NORMAL)			{				wobbleRate = .4;			}			//in hard mode, more enemy ships will wobble, making them harder to shoot			if(Game.main.difficultyMode == Game.HARD)			{				wobbleRate = .6;			}						//if this ship wobbles give it a y velocity so it'll move up and down			if(Math.random() < wobbleRate)				yv = Math.floor(Math.random()*2)+3;			//otherwise give it a zero y velocity so it just goes straight left			else				yv = 0;			//add an ENTER_FRAME method to run some logic at frame rate			FrameTimer.add(this);			cacheAsBitmap = true;						//add a drop shadow to the enemy ship for fun			var filter:BitmapFilter = new DropShadowFilter(5,45,0x000000,50,5,5);            var myFilters:Array = new Array();            myFilters.push(filter);            filters = myFilters;						//create a timer to control when the ship fires bullets			initShootingInterval();					}				//this method create a timer that fires bulet		public function initShootingInterval()		{			//each enemy ship will shoot at a random interval between 2 to 4 seconds...			var interval:int = Math.floor(Math.random()*3) + 2000;			shootTimer = new Timer(interval, 0);			shootTimer.addEventListener("timer", shoot);			shootTimer.start();								}				//do this at frame rate		public function enterFrame(e:Event)		{			//move the enemy ship to the left			x -= xv;			//make it wobble up or down			moveY();						//if it reaches the left edge of stage, kill it			if(x < -50)			{				kill(false);				return;			}						//if the hero ship is not dead			if(Game.main.ship != null)			{				//see if this enemy ship is hitting the hero ship				if(this.hitRect.hitTestObject(Game.main.ship.hitRect))				{					//if so kill this enemy ship					kill();					//and if the hero ship has no shiled					if(Ship.main.shield == null)					{						//have it take 20 damage						Game.main.ship.takeDamage(20);					}				}			}		}				//moves the enemy ship up and down if it's a wobble ship		public function moveY()		{			//if it's moving down and it reaches max y, reverse it's y velocity			if(yv > 0 && y > 250)			{				yv*=-1;			}			//if it's moving up and it reaches minimum y, reverse it's y velocity			else if(yv < 0 && y < 100)			{				yv*=-1;			}			//update its y position			y += yv;								}				//this method gets fired based on the shootTimer interval		public function shoot(e:TimerEvent)		{		    if(!FrameTimer.paused())		    {			    //add an enemy bullet at the position of this ship    			var b = new EnemyBullet(x-25, y);    			//show the bullet on stage    			Game.main.spriteClip.addChild(b);			}		}				//when the enemy ship is killed		public function kill(animate:Boolean=true)		{			//remove its shoot timer			shootTimer.stop();			shootTimer.removeEventListener("timer", shoot);			//add an explosion			if(animate)			{			  var e = new Explosion(x, y);  			Game.main.spriteClip.addChild(e);			}						//remove the enemy ship's ENTE_FRAME event			FrameTimer.remove(this);			//remove the grpahic from stage			Game.main.spriteClip.removeChild(this);			//find this enemy in the enemy ship list and remove it from the list			for(var i:int = 0; i < list.length; i++)			{				if(list[i] == this)					list.splice(i,1);			}		}				//when this ship gets hit by a bullet from the hero ship		public function takeDamage(d_)		{			//make a hit sound			var s = new Hit();			s.play();						//update this ship's health			health -= d_;			//update the game's hit stat			Game.main.updateStat("hits",1);						// this ship's health reaches zero			if(health <= 0 )			{				//update the game's kill stat, give the player 100 points				Game.main.updateStat("kills",1);				Game.main.updateStat("points",100);				health = 0;								//do a random check if it should eject aliens				var ejectRate:Number;				//make the rate of ejecting aliens lower on normal mode				if(Game.main.difficultyMode == Game.NORMAL)				{					ejectRate = .4;				}				//eject more aliens on hard mode				if(Game.main.difficultyMode == Game.HARD)				{					ejectRate = .6;				}				//if this ship does eject an alien basedon the random roll				if(Math.random() < ejectRate)				{						//create and alien at the position of this ship					var a = new Alien(x, y);					//add it to stage					Game.main.spriteClip.addChild(a);				}				//show points earned on stage				var d = new PointDisplay(x,y,100,1);				Game.main.spriteClip.addChild(d);				//kill this ship				kill();							}			else			{				//if the enemy ship takes damage but does not die, just give the player 10 points				Game.main.updateStat("points",10);			}		}			}	}