/*The EnemyBullet class is similar to the bullet class but has different collision logic*/package {  import flash.filters.BitmapFilter;  import flash.filters.BitmapFilterQuality;  import flash.filters.GlowFilter	import flash.display.*;	import flash.events.*;	public class EnemyBullet extends Sprite {				//enemy bullets need a speed		public var speed:int;		public function EnemyBullet(x_, y_) {						//create a sound when each enemy bullet is fired			var s = new SoundEnemyShot();			s.play();						//the enemy bullets will be a little slower then the hero bullets			speed = 15;			//plot them based on the x and y vlues passed in (the position of the alien ship)			x = x_;			y = y_;						//raw the bullet, starting with a thick black line			graphics.lineStyle(6,0x000000,1);			graphics.moveTo(-4,0);			graphics.lineTo(4,0);			//then make a thinner red line, the enemy bullets will be red			graphics.lineStyle(2,0xff0000,1);			graphics.moveTo(-3,0);			graphics.lineTo(3,0);			//add an ENTER_FRAME event to perform  logic at frame rate			FrameTimer.add(this);			//this improves perfromance of vector graphics			//this.filters = [getGlowFilter()];			cacheAsBitmap = true;		}				private function getGlowFilter():BitmapFilter {      var color:Number = 0xFF0000;      var alpha:Number = 0.70;      var blurX:Number = 6;      var blurY:Number = 6;      var strength:Number = 2;      var inner:Boolean = false;      var knockout:Boolean = false;      var quality:Number = BitmapFilterQuality.LOW;      return new GlowFilter(color,                            alpha,                            blurX,                            blurY,                            strength,                            quality,                            inner,                            knockout);    }				//this logic will run at frame rate		public function enterFrame(e:Event) {						//update the position, move the bullet to the left 			x -= speed;						//if the bullet reaches the left edge of screen			if (x < 0) {				//kill it				kill();				return;			}						//if the hero ship is not dead			if (Game.main.ship != null) 			{				//if the hero ship has no shield				if(Ship.main.shield == null)				{					//if this bullet is hitting the hero ship					if (this.hitTestObject(Game.main.ship.hitRect)) 					{						//have the hero ship take 7 points of damage						Game.main.ship.takeDamage(7);						//kill this bullet						kill();					}				}			}		}				//on kill, remove this bullet's ENTER_FRAME event, and remove its graphic from stage		public function kill() {			FrameTimer.remove(this);			Game.main.spriteClip.removeChild(this);		}	}}