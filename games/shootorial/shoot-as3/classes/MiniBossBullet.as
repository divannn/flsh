/*The MiniBossBullet class behaves much like the EnemyBullet classIt's constructor contains one more property, y velocity, so these bullets can shoot diagonally*/package {	import flash.display.*;	import flash.events.*;	public class MiniBossBullet extends Sprite {				//Every bullet has a speed		public var speed:int;		//this property defines whether the bullet will move diagonally		public var yv:int;				//when a MiniBossBullet is created		public function MiniBossBullet(x_, y_, yv_) {			//set its speed			speed = 7;			//set its position			x = x_;			y = y_;			//set its y velocity			yv = yv_;			//draw it using the Flash drawing api, MiniBossBullets are big red dots			graphics.lineStyle(3,0x000000,1);			graphics.beginFill(0xff0000	,1);			graphics.drawCircle(0,0,5);			graphics.endFill();						//add an ENTER_FRAME event so we can do some logic at frame rate			addEventListener(Event.ENTER_FRAME, enterFrame);						//this improves perfromance of vector graphics			cacheAsBitmap = true;		}				//do this at frame rate		public function enterFrame(e:Event) {						//update the bullet's x position, move it to the left			x -= speed;			//update its y position based on its y velocity			y += yv * 2;			//if it moves off the left of the screen kill it			if (x < 0) {				kill();				return;			}			//if the hero ship is not dead			if (Game.main.ship != null) 			{				//if the hero ship currently has no shield				if(Ship.main.shield == null)				{					//if this bullet is hitting the hero ship					if (this.hitTestObject(Game.main.ship.hitRect)) 					{						//the ship will take 20 points of damage						Game.main.ship.takeDamage(20);						//kill this bullet						kill();					}				}			}		}		//when this bullet is killed		public function kill() {			//remove its ENTER_FRAME event			removeEventListener(Event.ENTER_FRAME, enterFrame);			//remove the graphic			Game.main.spriteClip.removeChild(this);		}	}}