/*The LevelManager gets the details of a level rolling when a game gets initialized.It starts the power up timer, the enmey ship timer and the mini boss timer*/package{	import flash.utils.Timer;    import flash.events.TimerEvent;    import flash.display.Sprite;		public class LevelManager	{		static public var main;			public var miniBossInterval:int;		public var bossInterval:int;		public var powerupInterval:int;				public var miniBossTimer:Timer;		public var shipTimer:Timer;		public var powerupTimer:Timer;		public var winTimer:Timer;				//this just creates a LevelManager if one does not exist, or resets the existing one				static public function init()		{			if(main == null)			{				var lm = new LevelManager();			}			else			{				main.reset();			}					}				//this sets the values of the poer up timer and the miniboss timer		public function LevelManager()		{			main = this;			miniBossInterval = 30;//seconds between minibosses			powerupInterval = 10;//10 seconds between powerups			initLevel();		}				public function initLevel()		{			//init ship release timer, release enemy ship once a second			shipTimer = new Timer(1000, 0);			shipTimer.addEventListener("timer", shipTimerHandler);			shipTimer.start();						//init minibss release timer			miniBossTimer = new Timer(1000 * miniBossInterval, 0);			miniBossTimer.addEventListener("timer", miniBossTimerHandler);			miniBossTimer.start();							//init powerup release timer			powerupTimer = new Timer(1000 * powerupInterval, 0);			powerupTimer.addEventListener("timer", powerupHandler);			powerupTimer.start();		}				//this event fires every second and releases an enemy ship		public function shipTimerHandler(event:TimerEvent):void 		{        	var enemy = new EnemyShip();			Game.main.spriteClip.addChild(enemy);        }		//this event fires every 30 seconds and releases a miniboss		public function miniBossTimerHandler(event:TimerEvent):void 		{        	var m = new MiniBoss();			Game.main.spriteClip.addChild(m);        }				//this event fires every 10 seconds and releases a power-up		public function powerupHandler(event:TimerEvent):void 		{        	var m = new Powerup();			Game.main.spriteClip.addChild(m);        }				//this stop all the timers created in this LevelManager		public function stop()		{			shipTimer.stop();			miniBossTimer.stop();			powerupTimer.stop();					}				//this method first removes all timers, then resets the LevelManager, which restarts the timers		public function reset()		{			stop();			shipTimer.removeEventListener("timer", shipTimerHandler);			miniBossTimer.removeEventListener("timer", miniBossTimerHandler);			powerupTimer.removeEventListener("timer", powerupHandler);						initLevel();		}				//this method is fired from the Boss class when the boss is destroyed, the only win condition		public function win()		{			// first stop all timers of the LevelManager			stop();			//show a victory message			Game.main.victoryMessage.play();						//create a 4 second delay timer before showing the game over screen			winTimer = new Timer(4000, 1);			winTimer.addEventListener("timer", winHandler);			winTimer.start();			//update the game complete stat			Game.main.updateStat("gameComplete", 1);		}				//after the 4 second delay		public function winHandler(event:TimerEvent)		{			//remove this timer			winTimer.removeEventListener("timer", winHandler);			//remove the hero ship			Ship.main.kill();			//trigger the game over screen logic in the Game class			Game.main.gameOver();					}	}}